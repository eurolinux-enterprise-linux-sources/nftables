From 8180301a3aad23ccd2f81ddb8007efe8bef67892 Mon Sep 17 00:00:00 2001
From: Timothy Redaelli <tredaelli@redhat.com>
Date: Fri, 24 Feb 2017 11:35:32 +0100
Subject: [PATCH] netlink_delinearize: Avoid potential null pointer deref

Bugzilla: https://bugzilla.redhat.com/show_bug.cgi?id=1360257
Upstream Status: nftables commit d975ab4
Conflicts: Skipped a chunk due to missing commit
           34523621 ("src: add hash expression")

commit d975ab412c33ddce2c39e0e86f87085d13b1aeca
Author: Pablo Neira Ayuso <pablo@netfilter.org>
Date:   Mon Sep 5 18:52:43 2016 +0200

    netlink_delinearize: Avoid potential null pointer deref

    Phil Sutter says:

    As netlink_get_register() may return NULL, we must not pass the returned
    data unchecked to expr_set_type() as that will dereference it. Since the
    parser has failed at that point anyway, by returning early we can skip
    the useless statement allocation that follows in
    netlink_parse_ct_stmt().

    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Acked-by: Phil Sutter <phil@nwl.cc>

Signed-off-by: Timothy Redaelli <tredaelli@redhat.com>
---
 src/netlink_delinearize.c | 10 ++++++++++
 1 file changed, 10 insertions(+)

diff --git a/src/netlink_delinearize.c b/src/netlink_delinearize.c
index c3f0773..505516c 100644
--- a/src/netlink_delinearize.c
+++ b/src/netlink_delinearize.c
@@ -475,6 +475,10 @@ static void netlink_parse_payload_stmt(struct netlink_parse_ctx *ctx,
 
 	sreg = netlink_parse_register(nle, NFT_EXPR_PAYLOAD_SREG);
 	val  = netlink_get_register(ctx, loc, sreg);
+	if (val == NULL)
+		return netlink_error(ctx, loc,
+				     "payload statement has no expression");
+
 	stmt = payload_stmt_alloc(loc, expr, val);
 
 	list_add_tail(&stmt->list, &ctx->rule->stmts);
@@ -536,6 +540,9 @@ static void netlink_parse_meta_stmt(struct netlink_parse_ctx *ctx,
 
 	sreg = netlink_parse_register(nle, NFTNL_EXPR_META_SREG);
 	expr = netlink_get_register(ctx, loc, sreg);
+	if (expr == NULL)
+		return netlink_error(ctx, loc,
+				     "meta statement has no expression");
 
 	key  = nftnl_expr_get_u32(nle, NFTNL_EXPR_META_KEY);
 	stmt = meta_stmt_alloc(loc, key, expr);
@@ -565,6 +572,9 @@ static void netlink_parse_ct_stmt(struct netlink_parse_ctx *ctx,
 
 	sreg = netlink_parse_register(nle, NFTNL_EXPR_CT_SREG);
 	expr = netlink_get_register(ctx, loc, sreg);
+	if (expr == NULL)
+		return netlink_error(ctx, loc,
+				     "ct statement has no expression");
 
 	key  = nftnl_expr_get_u32(nle, NFTNL_EXPR_CT_KEY);
 	stmt = ct_stmt_alloc(loc, key, expr);
-- 
1.8.3.1

