From 611c93ad808addc5e3f38c279de273d6419b5c6e Mon Sep 17 00:00:00 2001
From: Timothy Redaelli <tredaelli@redhat.com>
Date: Mon, 8 May 2017 18:43:32 +0200
Subject: [PATCH] payload: don't update protocol context if we can't find a
 description

Bugzilla: https://bugzilla.redhat.com/show_bug.cgi?id=1446534
Bugzilla: https://bugzilla.redhat.com/show_bug.cgi?id=1399764
Upstream Status: nftables commit 3503738

commit 3503738f77cdbe521da1054a37f59ac2e442b4cf
Author: Florian Westphal <fw@strlen.de>
Date:   Mon Jun 6 21:52:28 2016 +0200

    payload: don't update protocol context if we can't find a description

    Since commit
    20b1131c07acd2fc ("payload: fix stacked headers protocol context tracking")
    we deref null pointer if we can't find a description for the desired
    protocol, so "ip protocol 254" crashes while testing protocols 6 or 17
    (tcp, udp) works.

    Also add a test case for this.

    Closes: https://bugzilla.netfilter.org/show_bug.cgi?id=1072
    Signed-off-by: Florian Westphal <fw@strlen.de>
    Acked-by: Pablo Neira Ayuso <pablo@netfilter.org>

Signed-off-by: Timothy Redaelli <tredaelli@redhat.com>
---
 src/payload.c                   | 3 +++
 tests/py/ip/ip.t                | 3 +++
 tests/py/ip/ip.t.payload        | 5 +++++
 tests/py/ip/ip.t.payload.inet   | 7 +++++++
 tests/py/ip/ip.t.payload.netdev | 7 +++++++
 5 files changed, 25 insertions(+)

diff --git a/src/payload.c b/src/payload.c
index ac0e917..9ba980a 100644
--- a/src/payload.c
+++ b/src/payload.c
@@ -85,6 +85,9 @@ static void payload_expr_pctx_update(struct proto_ctx *ctx,
 	base = ctx->protocol[left->payload.base].desc;
 	desc = proto_find_upper(base, proto);
 
+	if (!desc)
+		return;
+
 	assert(desc->base <= PROTO_BASE_MAX);
 	if (desc->base == base->base) {
 		assert(base->length > 0);
diff --git a/tests/py/ip/ip.t b/tests/py/ip/ip.t
index 594136c..a265b75 100644
--- a/tests/py/ip/ip.t
+++ b/tests/py/ip/ip.t
@@ -75,6 +75,9 @@ ip protocol != tcp;ok;ip protocol != 6
 ip protocol { icmp, esp, ah, comp, udp, udplite, tcp, dccp, sctp} accept;ok;ip protocol { 33, 136, 17, 51, 50, 6, 132, 1, 108} accept
 - ip protocol != { icmp, esp, ah, comp, udp, udplite, tcp, dccp, sctp} accept;ok
 
+ip protocol 255;ok
+ip protocol 256;fail
+
 ip checksum 13172 drop;ok
 ip checksum 22;ok
 ip checksum != 233;ok
diff --git a/tests/py/ip/ip.t.payload b/tests/py/ip/ip.t.payload
index 9ce5527..13df804 100644
--- a/tests/py/ip/ip.t.payload
+++ b/tests/py/ip/ip.t.payload
@@ -200,6 +200,11 @@ ip test-ip4 input
   [ lookup reg 1 set __set%d ]
   [ immediate reg 0 accept ]
 
+# ip protocol 255
+ip test-ip4 input
+  [ payload load 1b @ network header + 9 => reg 1 ]
+  [ cmp eq reg 1 0x000000ff ]
+
 # ip checksum 13172 drop
 ip test-ip4 input
   [ payload load 2b @ network header + 10 => reg 1 ]
diff --git a/tests/py/ip/ip.t.payload.inet b/tests/py/ip/ip.t.payload.inet
index cf41eb2..34fca91 100644
--- a/tests/py/ip/ip.t.payload.inet
+++ b/tests/py/ip/ip.t.payload.inet
@@ -264,6 +264,13 @@ inet test-inet input
   [ lookup reg 1 set __set%d ]
   [ immediate reg 0 accept ]
 
+# ip protocol 255
+ip test-ip4 input
+  [ meta load nfproto => reg 1 ]
+  [ cmp eq reg 1 0x00000002 ]
+  [ payload load 1b @ network header + 9 => reg 1 ]
+  [ cmp eq reg 1 0x000000ff ]
+
 # ip checksum 13172 drop
 inet test-inet input
   [ meta load nfproto => reg 1 ]
diff --git a/tests/py/ip/ip.t.payload.netdev b/tests/py/ip/ip.t.payload.netdev
index ae2a74b..b61fd1e 100644
--- a/tests/py/ip/ip.t.payload.netdev
+++ b/tests/py/ip/ip.t.payload.netdev
@@ -200,6 +200,13 @@ netdev test-netdev ingress
   [ lookup reg 1 set __set%d ]
   [ immediate reg 0 accept ]
 
+# ip protocol 255
+ip test-ip4 input
+  [ meta load protocol => reg 1 ]
+  [ cmp eq reg 1 0x00000008 ]
+  [ payload load 1b @ network header + 9 => reg 1 ]
+  [ cmp eq reg 1 0x000000ff ]
+
 # ip checksum 13172 drop
 netdev test-netdev ingress 
   [ meta load protocol => reg 1 ]
-- 
1.8.3.1

